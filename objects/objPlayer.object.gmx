<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayerIdleDown</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprPlayerMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialisation du joueur

//constantes
ALARM_JUMPFACE = 8;

PLAYER_SPEED = 1;

idle = true; // le personnage ne bouge pas
idleTime = 0;
jumping = false;
falling = false;
fallingLast = false;
moving = false;

dir = 1;
spd = 1;

canCode = false;
canJump = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// alarm jumpface

vspeed = -3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// gravity &amp;&amp; movement

var canMove = objPlayerManager.canMove;

var leftKey = -keyboard_check(vk_left) * canMove;
var rightKey = keyboard_check(vk_right) * canMove;
var jumpKey = keyboard_check_pressed(vk_up) * canMove;

hspeed = ( (leftKey + rightKey) * PLAYER_SPEED );

//horizontal collision
if (place_meeting(x + hspeed, y, objGround)) {
        while (!place_meeting(x + sign(hspeed), y, objGround)) {
            x += sign(hspeed);
        }
        hspeed = 0;
}


//jump
canJump = place_meeting(x, y+1, objGround)
if (canJump) {
    if (jumpKey &amp;&amp; !jumping) {
        if (moving) {
            vspeed = -3.5;
        } else {
            alarm[ALARM_JUMPFACE] = room_speed * 0.3;
        }
    }
} else {
    vspeed += 0.2;
}

// vertical collision
var pxvspeed = ceil(vspeed);
if (place_meeting(x, y+pxvspeed, objGround)) {
    
    y = ceil(y);

    if (pxvspeed &gt; 0) {
        while (!place_meeting(x, y + sign(pxvspeed), objGround)) {
            y += sign(pxvspeed);
        }
    }
    vspeed = 0;
}

// vertical clipping
while (place_meeting(x, y, objGround)) {
    y--;
}

if (vspeed || hspeed) {
    alarm[ALARM_JUMPFACE] = -1;
}

vspeed = min(vspeed, 8);

if (y &lt; room_height / 3) {
    x = xprevious;
    y = yprevious;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// define states

fallingLast = falling;

dir = sign(hspeed);
moving = (dir != 0)
jumping = ((vspeed &lt;= 0) &amp;&amp; place_free(x, y+1) ) 
          || alarm[ALARM_JUMPFACE] != -1;
falling = (vspeed &gt; 0);

var idleLast = idle;
idle = (!moving &amp;&amp; !falling &amp;&amp; !jumping);

if (idleLast &amp;&amp; !idle) idleTime = 0;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// define sprite

if (moving) {
    image_xscale = dir;
}

if (idle) {
    if (!idleTime) {
        sprite_index = sprPlayerIdleDown;
        image_index = 0;
    }
    image_speed = 0;
    idleTime++;
    
    if (idleTime &gt; room_speed * 4) {
        image_speed = 0.1;
        if ( !(idleTime mod room_speed) and irandom(3) == 0) {
            if (sprite_index == sprPlayerIdleDown) sprite_index = sprPlayerIdleUp;
            else sprite_index = sprPlayerIdleDown;
        }
    }
    
} else {
    if (jumping) {
        if (moving) {
            sprite_index = sprPlayerJump;
            image_speed = 0.2;
        } else if (sprite_index != sprPlayerJump){ // face jump
            sprite_index = sprPlayerJumpFace;
            image_speed = 0.1;
        }
        image_speed = 0.1;
    } else if (falling) {
        if (moving || sprite_index == sprPlayerJump) {
            sprite_index = sprPlayerFall;
        } else if (sprite_index != sprPlayerFall){ // face fall
            sprite_index = sprPlayerFallFace;
        }
        image_speed = 0.2;
    } else { // running
        if (fallingLast) image_index = 0;
        sprite_index = sprPlayerRunning;
        image_speed = 0.2
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// go code
if (!canCode &amp;&amp; !place_meeting(x, y, objChair)) {
    canCode = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objLamp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_up)) {
    other.image_index = 1 - other.image_index;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objChair">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (canCode) {
    x = other.x;
    y = other.y;
    image_xscale = 1;
    speed = 0;
    view_object[0] = objPlayerCoding;
    instance_change(objPlayerCoding, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*x = mouse_x;
y = mouse_y;*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>url_open( 'https://bananatierra.eu' );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (jumping || falling) {
    image_speed = 0;
    image_index = image_number - 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
draw_text(16, 16, "x : " + string(mouse_x));
draw_text(16, 32, "y : " + string(mouse_y) + "    dir : " + string(dir));
draw_text(16, 48, "jump : " + string(jumping));
draw_text(16, 64, "fall : " + string(falling));*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
